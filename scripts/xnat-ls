#!/usr/bin/env python
"""
Displays available projects, subjects, sessions and scans from MBI-XNAT.

The datatype listed (i.e. 'project', 'subject', 'session' or 'scan') is assumed
to be the next level down the data tree if not explicitly provided (i.e.
subjects if a project ID is provided, sessions if a subject ID is provided,
etc...) but can be explicitly provided via the '--datatype' option. For
example, to list all sessions within the MRH001 project 

    $ xnat-ls MRH001 --datatype session
    
Scans listed over multiple sessions will be added to a set, so the list
returned is the list of unique scan types within the specified sessions. If no
arguments are provided the projects the user has access to will be listed.

Multiple subject or session IDs can be provided as a sequence or using regular
expression syntax (e.g. MRH000_.*_MR01 will match the first session for each
subject in project MRH000). Note that if regular expressions are used then an
explicit datatype must also be provided.

User credentials can be stored in a ~/.netrc file so that they don't need to be
entered each time a command is run. If a new user provided or netrc doesn't
exist the tool will ask whether to create a ~/.netrc file with the given
credentials.
"""
import argparse
from xnatutils import ls, XnatUtilsUsageError, __version__


DATATYPES = ('project', 'subject', 'session', 'scan')

parser = argparse.ArgumentParser(description=__doc__,
                                 formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument('id_or_regex', type=str, nargs='*',
                    help=("The ID or regular expression of the "
                          "project/subject/session to list from."))
parser.add_argument('--datatype', '-d', type=str, choices=DATATYPES,
                    default=None, help=(
                        "The data type to list, can be one of '{}'"
                        .format("', '".join(DATATYPES))))
parser.add_argument('--with_scans', '-w', type=str, default=None, nargs='+',
                    help=("Only download from sessions containing the "
                          "specified scans"))
parser.add_argument('--without_scans', '-o', type=str, default=None, nargs='+',
                    help=("Only download from sessions that don't contain the "
                          "specified scans"))
parser.add_argument('--user', '-u', type=str, default=None,
                    help=("The user to connect to MBI-XNAT with"))
parser.add_argument('--version', '-V', action='version',
                    version='%(prog)s ' + __version__)
args = parser.parse_args()

try:
    print '\n'.join(ls(args.id_or_regex, datatype=args.datatype,
                       user=args.user, with_scans=args.with_scans,
                       without_scans=args.without_scans))
except XnatUtilsUsageError as e:
    print e
        
 